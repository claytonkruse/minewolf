// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.sqlite"
}

model User {
  id String @id @unique

  username     String   @unique
  createdAt    DateTime
  lastOnlineAt DateTime

  keys     Key[]
  sessions Session[]

  servers Server[]
}

model Key {
  id String @id @unique

  user_id String
  user    User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  hashed_password String?

  @@index([user_id])
}

model Session {
  id String @id @unique

  user_id String
  user    User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  active_expires BigInt
  idle_expires   BigInt

  @@index([user_id])
}

model Server {
  id String @id @unique

  user_id String
  user    User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  createdAt DateTime

  ip   String @unique
  port Int

  name        String
  slogan      String
  description String
  website     String
  video       String
  dynmap      String
  discord     String

  java      Boolean
  bedrock   Boolean
  crossplay Boolean

  whitelisted Boolean
  version     String

  votes      Vote[]
  servertags ServerTag[]
}

model Vote {
  id String @id @unique

  createdAt DateTime

  server_id String
  server    Server @relation(references: [id], fields: [server_id], onDelete: Cascade)

  minecraft_username String
}

model Tag {
  id String @id @unique

  type String
  name String @unique

  servertags ServerTag[]
}

model ServerTag {
  id String @id @unique

  tag_id String
  tag    Tag    @relation(references: [id], fields: [tag_id], onDelete: Cascade)

  server_id String
  server    Server @relation(references: [id], fields: [server_id], onDelete: Cascade)
}
